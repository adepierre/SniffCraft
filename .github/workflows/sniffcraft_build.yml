name: Sniffcraft Build

on:
  workflow_call:
    inputs:
      os:
        description: OS we want to build for
        required: true
        type: string
      version:
        description: Minecraft Version
        required: false
        default: latest
        type: string
      issue:
        description: URL of the issue requesting this build
        required: false
        default: ""
        type: string

env:
  BUILD_TYPE: Release
  CMAKE_GENERATOR: ${{ inputs.os == 'windows-latest' && 'Visual Studio 17 2022' || 'Unix Makefiles' }}
  VERSION: ${{ inputs.version }}
  ISSUE_URL: ${{ inputs.issue }}

jobs:
  build:
    runs-on: ${{ inputs.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install Linux deps
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y libwayland-dev libxkbcommon-dev xorg-dev

      - name: Create build folder
        run: cmake -E make_directory ${{ runner.workspace }}/build

      - name: Set environment variable for macOS
        if: ${{ inputs.os == 'macos-latest' }}
        run: echo "CMAKE_OSX_ARCHITECTURES=arm64;x86_64" >> $GITHUB_ENV

      - name: Configure cmake
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: >
          cmake -G "$CMAKE_GENERATOR"
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE
          -DGAME_VERSION="$VERSION"
          -DSNIFFCRAFT_WITH_ENCRYPTION=ON
          -DSNIFFCRAFT_FORCE_LOCAL_ZLIB=ON
          -DSNIFFCRAFT_FORCE_LOCAL_OPENSSL=ON
          -DSNIFFCRAFT_WITH_GUI=ON
          -S $GITHUB_WORKSPACE
          -B .

      - name: Upload version artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: MC-version
          path: ${{ runner.workspace }}/build/version.txt
          retention-days: 1

      - name: Build all
        shell: bash
        id: build
        working-directory: ${{ runner.workspace }}/build
        run: cmake --build . --config $BUILD_TYPE --parallel 2

      - name: Notify issue if build failed
        if: failure() && steps.build.conclusion == 'failure' && inputs.issue
        shell: bash
        run: |
          echo "${{ runner.os }} build failed. Logs can be found [here](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})." > body.txt
          echo -en '\n' >> body.txt
          echo -en '\n' >> body.txt
          echo @${{ github.repository_owner }} you might want to take a look. >> body.txt
          gh issue comment $ISSUE_URL --repo ${{ github.repository }} --body-file body.txt
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Upload artifact
        if: ${{ inputs.os != 'macos-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: sniffcraft-${{ runner.os }}
          path: ${{ github.workspace }}/bin/sniffcraft*
          retention-days: 1

      - name: Archive macOS application
        if: ${{ inputs.os == 'macos-latest' }}
        run: cd ${{ github.workspace }}/bin && zip -r sniffcraft.zip SniffCraft.app

      - name: Upload macOS artifact
        if: ${{ inputs.os == 'macos-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: sniffcraft-${{ runner.os }}
          path: ${{ github.workspace }}/bin/sniffcraft.zip
          retention-days: 1
